.container {
    width: 100%;
}

.toggle .header {
    display: block;
    clear: both;
    padding-bottom: 1em;
}

.toggle .header:after {
    content: " ▶";
}

.toggle .header.open:after {
    content: " ▼";
}

th.head {
    text-align: left;
}

/*
Fix for horizontal stacking weirdness in the RTD theme with Python properties:
https://github.com/readthedocs/sphinx_rtd_theme/issues/1301
*/
.py.property {
    display: block !important;
}

/* Pygments Sytnax Highlighting for Furo Theme Override */
.highlight .k, .highlight .kc, .highlight .kd, .highlight .kn, .highlight .kp, .highlight .kr { color: #1243d4 !important; } /* Keywords */
.highlight .kt, .highlight .nc { color: #11abb9 !important; } /* Types, Class names */
.highlight .nv { color: #0a1985 !important; } /* Variables, e.g. instance variables */
.highlight .nb { color: #0a1985 !important; } /* Built-in names, can also be variable-like */
.highlight .n, .highlight .nn { color: #000000 !important; } /* General names, namespace names - default to black */

.highlight .nf { color: #d14 !important; } /* Function names */
.highlight .c, .highlight .c1, .highlight .cs, .highlight .cm { color: #149104 !important; } /* Comments - green */
.highlight .s, .highlight .s1, .highlight .s2, .highlight .sd, .highlight .se, .highlight .sh, .highlight .si, .highlight .sx, .highlight .sr { color: #d14 !important; } /* Strings, Regex - using the red/pink */
.highlight .m, .highlight .mf, .highlight .mh, .highlight .mi, .highlight .il, .highlight .mo { color: #7211c2 !important; } /* Numbers - purple */

/* Ensure other elements like operators are sensible */
.highlight .o, .highlight .ow { color: #000000 !important; } /* Operators - black */
.highlight .p { color: #000000 !important; } /* Punctuation - black */

/* Section highlighting styles */
.goto_highlight {
  animation: highlight-fade-in 0.5s ease-in;
  background-color: rgba(255, 255, 128, 0.5);
}

.goto_highlight_fade_out {
  animation: highlight-fade-out 2s ease-out;
}

@keyframes highlight-fade-in {
  from {
    background-color: rgba(255, 255, 0, 0);
  }
  to {
    background-color: rgba(255, 255, 0, 0.2);
  }
}

@keyframes highlight-fade-out {
  from {
    background-color: rgba(255, 255, 0, 0.2);
  }
  to {
    background-color: rgba(255, 255, 0, 0);
  }
}

/* Code block styles */
pre {
  color: #000000;
  background: #F8F8F8;
}

pre code {
  color: #000000;
  background-color: #F8F8F8;
}

.highlight {
  background: #F8F8F8;
}

/* Custom syntax highlighting for Slang-specific classes */
pre .code_keyword {
  color: #1243d4 !important; /* Blue - for keywords like 'int' */
}

pre .code_type {
  color: #11abb9 !important; /* Teal/Cyan - for types like 'Array' */
}

pre .code_var {
  color: #0a1985 !important; /* Color for variables like 'N' */
}

/* Target 'a' tags directly within 'pre' blocks for method names */
pre a, pre a:visited { /* Added :visited for consistency */
  color: #d14 !important;   /* Dark Pink/Red - for method names like 'getCount' */
  text-decoration: none !important; 
}

pre a:hover {
  text-decoration: underline !important;
}

pre a.code_param {
  color: #808080 !important; /* Gray for parameters */
}

/* General text in pre blocks, if not caught by other rules, should be black. */
/* This might be slightly redundant given existing rules, but ensures our intent. */
pre, pre code {
    color: black !important; /* Default code text color */
    /* background-color: #F8F8F8; /* Already set by existing rules */
}
